---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Card from "@/components/Card";
import { getCollection, type CollectionEntry } from "astro:content";
import TagNav from "@/components/TagNav.astro";

export async function getStaticPaths() {
  const all = await getCollection("blog");
  const tags = Array.from(new Set(all.flatMap((p) => p.data.tags ?? [])));

  return tags.map((tag) => {
    const posts = all
      .filter((p) => (p.data.tags ?? []).includes(tag))
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
    return { params: { tag }, props: { tag, posts, all } };
  });
}

const { tag, posts, all } = Astro.props as {
  tag: string;
  posts: CollectionEntry<"blog">[];
  all: CollectionEntry<"blog">[];
};

const tagSet = new Set<string>();
for (const p of all) (p.data.tags ?? []).forEach((t: string) => tagSet.add(t));

const order = ["ALL", "Dev", "회고", "프로젝트", "내 포스트"] as const;
const displayTags = ["ALL", ...order.slice(1).filter((t) => tagSet.has(t))];

const pageTitle = `${tag}`;
---


<BaseLayout pageTitle={`${tag}`}>
  <span class="flex text-[14px] justify-center text-zinc-500">{posts.length}개의 글</span>

  <TagNav displayTags={displayTags} pageTitle={pageTitle} />

  <ul class="flex flex-col gap-3">
    {posts.map((post) => (
      <Card client:only="solid-js" post={post} />
    ))}
  </ul>
</BaseLayout>
